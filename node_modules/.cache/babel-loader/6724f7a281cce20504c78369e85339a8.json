{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vader\\\\Downloads\\\\ezyzip (1)\\\\filter-students\\\\src\\\\components\\\\Database.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useState } from \"react\";\nimport MyModal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Database(props) {\n  _s();\n\n  const [selectedRow, setSelectedRow] = useState();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = id => {\n    console.log(\"ididid\", id);\n    const data = props.mData;\n    console.log(\"adasfdsfds\", data);\n    const row = data.filter(row => row.id == id);\n    setSelectedRow(row);\n    setOpen(true);\n    console.log(\"row\", row);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [open && /*#__PURE__*/_jsxDEV(MyModal, {\n      open: open,\n      selectedRow: selectedRow,\n      closeModal: () => closeModal()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 600\n        },\n        \"aria-label\": \"compare table\",\n        stickyHeader: true,\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              sx: {\n                backgroundColor: \"#141414\",\n                color: \"#fff\",\n                maxHeight: \"40px\"\n              },\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              sx: {\n                backgroundColor: \"#141414\",\n                color: \"#fff\",\n                maxHeight: \"40px\"\n              },\n              children: \"Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              sx: {\n                backgroundColor: \"#141414\",\n                color: \"#fff\",\n                maxHeight: \"40px\"\n              },\n              children: \"Latest Employer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              sx: {\n                backgroundColor: \"#141414\",\n                color: \"#fff\",\n                maxHeight: \"40px\"\n              },\n              children: \"Inferred Salary in USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              sx: {\n                backgroundColor: \"#141414\",\n                color: \"#fff\",\n                maxHeight: \"40px\"\n              },\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: props.mData.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            id: row.id,\n            onClick: e => {\n              handleOpen(e.target.id);\n            },\n            className: \"cursor-pointer\",\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.full_name.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row === null || row === void 0 ? void 0 : row.inferred_years_experience\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.job_company_name.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.inferred_salary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.location_region.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Database, \"JqN2UUWngBADQR9eCLN7GMMJvPk=\");\n\n_c = Database;\n\nvar _c;\n\n$RefreshReg$(_c, \"Database\");","map":{"version":3,"sources":["C:/Users/Vader/Downloads/ezyzip (1)/filter-students/src/components/Database.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useState","MyModal","Database","props","selectedRow","setSelectedRow","open","setOpen","handleOpen","id","console","log","data","mData","row","filter","closeModal","minWidth","backgroundColor","color","maxHeight","map","e","target","full_name","toUpperCase","inferred_years_experience","job_company_name","inferred_salary","location_region"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useState } from \"react\";\r\nimport MyModal from \"./Modal\";\r\n\r\n\r\n\r\n\r\nexport default function Database(props) {\r\n\r\n    const [selectedRow, setSelectedRow] = useState();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = (id) => {\r\n    console.log(\"ididid\",id)\r\n    const data = props.mData;\r\n    console.log(\"adasfdsfds\",data)\r\n    const row = data.filter((row) => row.id == id);\r\n    setSelectedRow(row);\r\n    setOpen(true);\r\n    console.log(\"row\", row);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n    return (<>\r\n    {open && (\r\n        <MyModal\r\n          open={open}\r\n          selectedRow={selectedRow}\r\n          closeModal={() => closeModal()}\r\n        />\r\n      )}\r\n        <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 600 }} aria-label=\"compare table\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell\r\n                align=\"left\"\r\n                sx={{\r\n                  backgroundColor: \"#141414\",\r\n                  color: \"#fff\",\r\n                  maxHeight: \"40px\",\r\n                }}\r\n              >\r\n                Full Name\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"left\"\r\n                sx={{\r\n                  backgroundColor: \"#141414\",\r\n                  color: \"#fff\",\r\n                  maxHeight: \"40px\",\r\n                }}\r\n              >\r\n                Experience\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"left\"\r\n                sx={{\r\n                  backgroundColor: \"#141414\",\r\n                  color: \"#fff\",\r\n                  maxHeight: \"40px\",\r\n                }}\r\n              >\r\n                Latest Employer\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"left\"\r\n                sx={{\r\n                  backgroundColor: \"#141414\",\r\n                  color: \"#fff\",\r\n                  maxHeight: \"40px\",\r\n                }}\r\n              >\r\n                Inferred Salary in USD\r\n              </TableCell>\r\n              \r\n              <TableCell\r\n                align=\"left\"\r\n                sx={{\r\n                  backgroundColor: \"#141414\",\r\n                  color: \"#fff\",\r\n                  maxHeight: \"40px\",\r\n                }}\r\n              >\r\n                Location\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.mData.map((row) => (\r\n              <TableRow key={row.id} id={row.id}\r\n              onClick={(e) => {\r\n                handleOpen(e.target.id);\r\n              }} className=\"cursor-pointer\">\r\n                <TableCell align=\"left\">{row.full_name.toUpperCase()}</TableCell>\r\n                <TableCell align=\"left\">\r\n                  {row?.inferred_years_experience}\r\n                </TableCell>\r\n                <TableCell align=\"left\">\r\n                  {row.job_company_name.toUpperCase()}\r\n                </TableCell>\r\n                <TableCell align=\"left\">{row.inferred_salary}\r\n                </TableCell>\r\n                <TableCell align=\"left\">{row.location_region.toUpperCase()}</TableCell>\r\n                \r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      </>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}
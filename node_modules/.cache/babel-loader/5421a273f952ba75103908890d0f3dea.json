{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vader\\\\Downloads\\\\ezyzip (1)\\\\filter-students\\\\src\\\\components\\\\SkillsSearch.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst [skills, setSkills] = useState([]);\nconst skillsMenu = [\"javascript\", \"jquery\", \"node.js\", \"express.js\", \"react.js\", \"mysql\", \"mongodb\", \"html\", \"mvc\", \"css\", \"matlab\", \"chemical engineering\", \"microsoft office\", \"data analysis\", \"engineering\", \"microsoft excel\", \"powerpoint\", \"research\", \"chemistry\", \"autocad\", \"microsoft word\", \"comsol\", \"thermodynamics\", \"ir spectroscopy\", \"process engineering\", \"solidworks\", \"distillation\", \"organic chemistry\", \"teamwork\", \"technical writing\", \"uv/vis\", \"nmr\", \"ftir\", \"hplc\", \"gas chromatography\", \"materials science\", \"pro/ii\", \"cascading style sheets\", \"c++\", \"python\", \"c#\", \"java\", \"check\"];\n\nconst handleSkillsChange = event => {\n  const {\n    target: {\n      value\n    }\n  } = event;\n  setSkills(typeof value === \"string\" ? value.split(\",\") : value);\n};\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function skillsSelection(props) {\n  _s();\n\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName( // On autofill we get a the stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-multiple-chip-label\",\n        children: \"Chip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-multiple-chip-label\",\n        id: \"demo-multiple-chip\",\n        multiple: true,\n        value: personName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          id: \"select-multiple-chip\",\n          label: \"Chip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 0.5\n          },\n          children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n            label: value\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this),\n        MenuProps: MenuProps,\n        children: [\"skillsMenu.map((name) => (\", /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: name,\n          style: getStyles(name, personName, theme),\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), \"))}\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(skillsSelection, \"sfDDdSu1JVzyreev7Xrw9PfgWAE=\", false, function () {\n  return [useTheme];\n});","map":{"version":3,"sources":["C:/Users/Vader/Downloads/ezyzip (1)/filter-students/src/components/SkillsSearch.js"],"names":["React","useTheme","Box","OutlinedInput","InputLabel","MenuItem","FormControl","Select","Chip","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","skills","setSkills","useState","skillsMenu","handleSkillsChange","event","target","value","split","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","skillsSelection","props","setPersonName","handleChange","m","selected","display","flexWrap","gap","map"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELK,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB;AASA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,EAAD,CAApC;AAEA,MAAMC,UAAU,GAAG,CACf,YADe,EAEf,QAFe,EAGf,SAHe,EAIf,YAJe,EAKf,UALe,EAMf,OANe,EAOf,SAPe,EAQf,MARe,EASf,KATe,EAUf,KAVe,EAWf,QAXe,EAYf,sBAZe,EAaf,kBAbe,EAcf,eAde,EAef,aAfe,EAgBf,iBAhBe,EAiBf,YAjBe,EAkBf,UAlBe,EAmBf,WAnBe,EAoBf,SApBe,EAqBf,gBArBe,EAsBf,QAtBe,EAuBf,gBAvBe,EAwBf,iBAxBe,EAyBf,qBAzBe,EA0Bf,YA1Be,EA2Bf,cA3Be,EA4Bf,mBA5Be,EA6Bf,UA7Be,EA8Bf,mBA9Be,EA+Bf,QA/Be,EAgCf,KAhCe,EAiCf,MAjCe,EAkCf,MAlCe,EAmCf,oBAnCe,EAoCf,mBApCe,EAqCf,QArCe,EAsCf,wBAtCe,EAuCf,KAvCe,EAwCf,QAxCe,EAyCf,IAzCe,EA0Cf,MA1Ce,EA2Cf,OA3Ce,CAAnB;;AA8CA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAClC,QAAM;AACJC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AADJ,MAEFF,KAFJ;AAGAJ,EAAAA,SAAS,CAAC,OAAOM,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACC,KAAN,CAAY,GAAZ,CAA5B,GAA+CD,KAAhD,CAAT;AACD,CALH;;AAOA,SAASE,SAAT,CAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,KAArC,EAA4C;AAC1C,SAAO;AACLC,IAAAA,UAAU,EACRF,UAAU,CAACG,OAAX,CAAmBJ,IAAnB,MAA6B,CAAC,CAA9B,GACIE,KAAK,CAACG,UAAN,CAAiBC,iBADrB,GAEIJ,KAAK,CAACG,UAAN,CAAiBE;AAJlB,GAAP;AAMD;;AAED,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,QAAMP,KAAK,GAAG3B,QAAQ,EAAtB;AACA,QAAM,CAAC0B,UAAD,EAAaS,aAAb,IAA8BpC,KAAK,CAACkB,QAAN,CAAe,EAAf,CAApC;;AAEA,QAAMmB,YAAY,GAAIhB,KAAD,IAAW;AAC9B,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFF,KAFJ;AAGAe,IAAAA,aAAa,EACX;AACA,WAAOb,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACC,KAAN,CAAY,GAAZ,CAA5B,GAA+CD,KAFpC,CAAb;AAID,GARD;;AAUA,sBACE;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAE;AAAEe,QAAAA,CAAC,EAAE,CAAL;AAAQvB,QAAAA,KAAK,EAAE;AAAf,OAAjB;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,0BADV;AAEE,QAAA,EAAE,EAAC,oBAFL;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,KAAK,EAAEY,UAJT;AAKE,QAAA,QAAQ,EAAEU,YALZ;AAME,QAAA,KAAK,eAAE,QAAC,aAAD;AAAe,UAAA,EAAE,EAAC,sBAAlB;AAAyC,UAAA,KAAK,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBANT;AAOE,QAAA,WAAW,EAAGE,QAAD,iBACX,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,QAAQ,EAAE,MAA7B;AAAqCC,YAAAA,GAAG,EAAE;AAA1C,WAAT;AAAA,oBACGH,QAAQ,CAACI,GAAT,CAAcpB,KAAD,iBACZ,QAAC,IAAD;AAAkB,YAAA,KAAK,EAAEA;AAAzB,aAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBARJ;AAcE,QAAA,SAAS,EAAEZ,SAdb;AAAA,8DAiBI,QAAC,QAAD;AAEE,UAAA,KAAK,EAAEe,IAFT;AAGE,UAAA,KAAK,EAAED,SAAS,CAACC,IAAD,EAAOC,UAAP,EAAmBC,KAAnB,CAHlB;AAAA,oBAKGF;AALH,WACOA,IADP;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GA/CuBQ,e;UACRjC,Q","sourcesContent":["import * as React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Chip from '@mui/material/Chip';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst [skills, setSkills] = useState([]);\r\n\r\nconst skillsMenu = [\r\n    \"javascript\",\r\n    \"jquery\",\r\n    \"node.js\",\r\n    \"express.js\",\r\n    \"react.js\",\r\n    \"mysql\",\r\n    \"mongodb\",\r\n    \"html\",\r\n    \"mvc\",\r\n    \"css\",\r\n    \"matlab\",\r\n    \"chemical engineering\",\r\n    \"microsoft office\",\r\n    \"data analysis\",\r\n    \"engineering\",\r\n    \"microsoft excel\",\r\n    \"powerpoint\",\r\n    \"research\",\r\n    \"chemistry\",\r\n    \"autocad\",\r\n    \"microsoft word\",\r\n    \"comsol\",\r\n    \"thermodynamics\",\r\n    \"ir spectroscopy\",\r\n    \"process engineering\",\r\n    \"solidworks\",\r\n    \"distillation\",\r\n    \"organic chemistry\",\r\n    \"teamwork\",\r\n    \"technical writing\",\r\n    \"uv/vis\",\r\n    \"nmr\",\r\n    \"ftir\",\r\n    \"hplc\",\r\n    \"gas chromatography\",\r\n    \"materials science\",\r\n    \"pro/ii\",\r\n    \"cascading style sheets\",\r\n    \"c++\",\r\n    \"python\",\r\n    \"c#\",\r\n    \"java\",\r\n    \"check\",\r\n];\r\n\r\nconst handleSkillsChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSkills(typeof value === \"string\" ? value.split(\",\") : value);\r\n  };\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function skillsSelection(props) {\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{ m: 1, width: 300 }}>\r\n        <InputLabel id=\"demo-multiple-chip-label\">Chip</InputLabel>\r\n        <Select\r\n          labelId=\"demo-multiple-chip-label\"\r\n          id=\"demo-multiple-chip\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\r\n          renderValue={(selected) => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} />\r\n              ))}\r\n            </Box>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          skillsMenu.map((name) => (\r\n            <MenuItem\r\n              key={name}\r\n              value={name}\r\n              style={getStyles(name, personName, theme)}\r\n            >\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}